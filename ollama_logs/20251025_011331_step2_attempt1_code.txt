import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)

# Assume driver is already initialized; if not, uncomment the following lines:
# driver = webdriver.Chrome()  # or any other driver
# driver.maximize_window()

# Navigate to the job page
job_url = "https://fractal.wd1.myworkdayjobs.com/Careers/job/Bengaluru/GCP-Engineer_SR-20029?source=LinkedIn"
driver.get(job_url)

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: Try <a> tags with data-automation-id or role='button'
try:
    apply_link = wait.until(
        EC.element_to_be_clickable(
            (
                By.CSS_SELECTOR,
                "a[data-automation-id*='apply'], a[data-automation-id*='Apply'], a[role='button']",
            )
        )
    )
    driver.execute_script(
        "arguments[0].scrollIntoView({block: 'center'});", apply_link
    )
    time.sleep(1)
    driver.execute_script("arguments[0].click();", apply_link)
    print("✓ Clicked Apply link via JavaScript (Strategy 1)")
    clicked = True
except (TimeoutException, NoSuchElementException):
    pass
except Exception as e:
    print(f"✗ Strategy 1 failed: {e}")

# Strategy 2: Visible button with text 'Apply'
if not clicked:
    try:
        apply_button = wait.until(
            EC.element_to_be_clickable(
                (
                    By.XPATH,
                    "//button[contains(translate(normalize-space(.), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'apply') "
                    "or contains(translate(normalize-space(.), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'next') "
                    "or contains(translate(normalize-space(.), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'continue')]",
                )
            )
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", apply_button
        )
        time.sleep(0.5)
        try:
            apply_button.click()
            print("✓ Clicked Apply button via normal click (Strategy 2)")
        except ElementClickInterceptedException:
            driver.execute_script("arguments[0].click();", apply_button)
            print("✓ Clicked Apply button via JavaScript click (Strategy 2)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass
    except Exception as e:
        print(f"✗ Strategy 2 failed: {e}")

# Strategy 3: Div with role='button' and data-automation-id
if not clicked:
    try:
        div_button = driver.find_element(
            By.CSS_SELECTOR, "div[role='button'][data-automation-id*='button']"
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", div_button
        )
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", div_button)
        print("✓ Clicked div button via JavaScript (Strategy 3)")
        clicked = True
    except NoSuchElementException:
        pass
    except Exception as e:
        print(f"✗ Strategy 3 failed: {e}")

# Strategy 4: Fallback - any element containing text 'Apply'
if not clicked:
    try:
        fallback_elem = driver.find_element(
            By.XPATH,
            "//*[contains(translate(normalize-space(.), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'apply')][1]",
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", fallback_elem
        )
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", fallback_elem)
        print("✓ Clicked fallback element via JavaScript (Strategy 4)")
        clicked = True
    except NoSuchElementException:
        pass
    except Exception as e:
        print(f"✗ Strategy 4 failed: {e}")

if not clicked:
    print("✗ Unable to locate and click the Apply button with any strategy.")