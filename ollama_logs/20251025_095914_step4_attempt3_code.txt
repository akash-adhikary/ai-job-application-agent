# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

wait = WebDriverWait(driver, 15)

# -------- Fill Email ----------
try:
    email_input = wait.until(
        EC.presence_of_element_located((By.ID, "input-11"))
    )
    email_input.clear()
    email = resume_data.get("email", "")
    email_input.send_keys(email)
    print("✓ Email filled")
except Exception as e:
    print(f"⚠️ Email field issue: {e}")

# -------- Fill Password ----------
try:
    password_input = driver.find_element(By.ID, "input-12")
    password_input.clear()
    pwd = resume_data.get("password", "")
    password_input.send_keys(pwd)
    print("✓ Password filled")
except Exception as e:
    print(f"⚠️ Password field issue: {e}")

# -------- Click Sign‑In ----------
clicked = False

# Strategy 1: direct button using data‑automation-id
try:
    sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
    driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
    driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    print("✓ Clicked Sign In (data‑automation-id)")
    clicked = True
except Exception as e:
    print(f"Strategy 1 failed: {e}")

# Strategy 2: button with known class pattern
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button.css-1ru62dj")
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In (class css-1ru62dj)")
        clicked = True
    except Exception as e:
        print(f"Strategy 2 failed: {e}")

# Strategy 3: click overlay that may be intercepting
if not clicked:
    try:
        overlay = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", overlay)
        print("✓ Clicked click_filter overlay")
        # after removing overlay, try button again
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In after overlay removal")
        clicked = True
    except Exception as e:
        print(f"Strategy 3 failed: {e}")

# Strategy 4: submit form directly
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Form submitted directly")
        clicked = True
    except Exception as e:
        print(f"Strategy 4 failed: {e}")

# Strategy 5: press Enter in password field
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        print("✓ Pressed Enter in password field")
        clicked = True
    except Exception as e:
        print(f"Strategy 5 failed: {e}")

if not clicked:
    print("⚠️ Unable to trigger Sign In; manual intervention may be required.")