from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)

wait = WebDriverWait(driver, 15)

clicked = False

# Strategy 1: Direct JS click on the sign‑in button
try:
    sign_in_btn = wait.until(
        EC.presence_of_element_located(
            (By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
        )
    )
    # Remove possible overlay attributes
    driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
    driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
    driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_in_btn)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    print("✓ Clicked Sign In button via JavaScript")
    clicked = True
except (NoSuchElementException, TimeoutException, ElementClickInterceptedException) as e:
    print(f"⚠️ Direct click failed: {e}")

# Strategy 2: Click the click‑filter overlay if present
if not clicked:
    try:
        click_filter = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", click_filter)
        print("✓ Clicked click_filter overlay")
        clicked = True
    except NoSuchElementException:
        print("ℹ️ click_filter not found")

# Strategy 3: Submit the surrounding form
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[.//button[@data-automation-id='signInSubmitButton']]")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Submitted sign‑in form")
        clicked = True
    except NoSuchElementException:
        print("ℹ️ Sign‑in form not located")

# Strategy 4: Press ENTER in the password field as a fallback
if not clicked:
    try:
        pwd_field = driver.find_element(By.CSS_SELECTOR, "input[type='password']")
        pwd_field.send_keys(Keys.RETURN)
        print("✓ Pressed ENTER in password field")
        clicked = True
    except NoSuchElementException:
        print("⚠️ Password field not found; cannot fallback")

if not clicked:
    print("❌ Unable to click Sign In button by any method")