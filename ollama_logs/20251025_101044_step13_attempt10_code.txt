# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

import time
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)

wait = WebDriverWait(driver, 15)

# --- Fill Email ---
try:
    email_field = wait.until(
        EC.presence_of_element_located((By.ID, "input-260"))
    )
    email_field.clear()
    email = resume_data.get("email", "")
    email_field.send_keys(email)
    print("✓ Email filled")
except (TimeoutException, NoSuchElementException) as e:
    print(f"⚠️ Email field not found: {e}")

# --- Fill Password ---
try:
    password_field = driver.find_element(By.ID, "input-261")
    password_field.clear()
    pwd = resume_data.get("password", "")
    password_field.send_keys(pwd)
    print("✓ Password filled")
except NoSuchElementException as e:
    print(f"⚠️ Password field not found: {e}")

time.sleep(1)  # small pause before clicking

clicked = False

# --- Strategy 1: Direct JS click on Sign‑In button ---
try:
    sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
    # Remove possible intercepting attributes
    driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
    driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    print("✓ Clicked Sign‑In button via JS")
    clicked = True
except (NoSuchElementException, ElementClickInterceptedException) as e:
    print(f"⚠️ Direct click failed: {e}")

# --- Strategy 2: Click overlay/filter that may block the button ---
if not clicked:
    try:
        click_filter = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", click_filter)
        print("✓ Clicked click_filter overlay")
        # retry clicking sign‑in after removing overlay
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign‑In after clearing overlay")
        clicked = True
    except NoSuchElementException:
        print("⚠️ click_filter not present")
    except Exception as e:
        print(f"⚠️ Overlay click strategy failed: {e}")

# --- Strategy 3: Submit the form directly ---
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[contains(@data-automation-id, 'signIn') or @role='form']")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Form submitted directly")
        clicked = True
    except NoSuchElementException:
        print("⚠️ Sign‑In form not found")
    except Exception as e:
        print(f"⚠️ Form submit failed: {e}")

# --- Strategy 4: Press Enter in password field ---
if not clicked:
    try:
        password_field.send_keys(Keys.RETURN)
        print("✓ Pressed Enter in password field")
        clicked = True
    except Exception as e:
        print(f"⚠️ Enter key strategy failed: {e}")

if not clicked:
    print("❌ Unable to trigger Sign‑In action")