# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# --- Fill Email ---
email = (
    resume_data.get("email")
    or resume_data.get("personal_info", {}).get("email", "")
)
email_input = wait.until(EC.element_to_be_clickable((By.ID, "input-260")))
email_input.clear()
email_input.send_keys(email)

# --- Fill Password ---
password = resume_data.get("password", "")
password_input = wait.until(EC.element_to_be_clickable((By.ID, "input-261")))
password_input.clear()
password_input.send_keys(password)

# Small pause to let UI settle
time.sleep(0.5)

clicked = False

# ---- Strategy 1: Direct JavaScript click on the Sign‑In button ----
try:
    sign_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
    driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_btn)
    driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_btn)
    driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_btn)
    driver.execute_script("arguments[0].click();", sign_btn)
    clicked = True
except Exception as e:
    print(f"Direct JS click failed: {e}")

# ---- Strategy 2: Click possible overlay filter then retry button ----
if not clicked:
    try:
        overlay = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", overlay)
        sign_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
        driver.execute_script("arguments[0].click();", sign_btn)
        clicked = True
    except Exception as e:
        print(f"Overlay click fallback failed: {e}")

# ---- Strategy 3: Submit the surrounding form directly ----
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form")
        driver.execute_script("arguments[0].submit();", form)
        clicked = True
    except Exception as e:
        print(f"Form submit fallback failed: {e}")

# ---- Strategy 4: Press Enter in the password field ----
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        clicked = True
    except Exception as e:
        print(f"Enter key fallback failed: {e}")

if clicked:
    print("✓ Sign‑in submitted")
else:
    print("⚠️ Sign‑in could not be performed")