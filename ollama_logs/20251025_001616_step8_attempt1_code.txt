wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: button element with exact text
try:
    btn = wait.until(EC.element_to_be_clickable(
        (By.XPATH, "//button[normalize-space(text())='Create Account']")))
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", btn)
    time.sleep(1)
    try:
        btn.click()
    except Exception:
        driver.execute_script("arguments[0].click();", btn)
    print("✓ Clicked 'Create Account' button (direct button)")
    clicked = True
except Exception as e:
    print(f"Strategy 1 failed: {e}")

# Strategy 2: any clickable element containing the text
if not clicked:
    try:
        elem = wait.until(EC.element_to_be_clickable(
            (By.XPATH, "//*[contains(text(),'Create Account')]")))
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", elem)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", elem)
        print("✓ Clicked 'Create Account' via generic xpath")
        clicked = True
    except Exception as e:
        print(f"Strategy 2 failed: {e}")

# Strategy 3: CSS selector by class (if unique)
if not clicked:
    try:
        btn = wait.until(EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "button.css-1ru62dj")))
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", btn)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", btn)
        print("✓ Clicked 'Create Account' via CSS class")
        clicked = True
    except Exception as e:
        print(f"Strategy 3 failed: {e}")

# Final fallback: click first element that looks like a button and contains the text
if not clicked:
    try:
        elem = driver.find_element(By.XPATH, "//*[self::button or self::a or self::div][contains(.,'Create Account')]")
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", elem)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", elem)
        print("✓ Clicked 'Create Account' via fallback selector")
        clicked = True
    except Exception as e:
        print(f"All strategies failed to click 'Create Account': {e}")

time.sleep(2)  # give the next page a moment to load