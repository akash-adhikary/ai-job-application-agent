# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# ---------- Helper to safe get credentials ----------
def get_credential(key):
    try:
        return resume_data.get(key) or resume_data.get('personal_info', {}).get(key) or ''
    except Exception:
        return ''

email = get_credential('email')
password = get_credential('password')

# ---------- Locate and fill email ----------
try:
    email_input = wait.until(
        EC.presence_of_element_located(
            (By.ID, "input-11")
        )
    )
    email_input.clear()
    email_input.send_keys(email)
    print("✓ Filled email")
except Exception as e:
    print(f"⚠️ Email input not found: {e}")

# ---------- Locate and fill password ----------
try:
    password_input = driver.find_element(By.ID, "input-12")
    password_input.clear()
    password_input.send_keys(password)
    print("✓ Filled password")
except Exception as e:
    print(f"⚠️ Password input not found: {e}")

# ---------- Attempt to click Sign In ----------
clicked = False
sign_in_selectors = [
    (By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']"),
    (By.CSS_SELECTOR, "button.css-1ru62dj"),
    (By.XPATH, "//button[contains(text(),'Sign In') and @type='submit']"),
]

for locator in sign_in_selectors:
    if clicked:
        break
    try:
        sign_btn = wait.until(EC.element_to_be_clickable(locator))
        # Remove possible intercepting attributes
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_btn)
        driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_btn)
        time.sleep(0.3)
        driver.execute_script("arguments[0].click();", sign_btn)
        print("✓ Clicked Sign In button via JS")
        clicked = True
    except Exception as e:
        print(f"Attempt with selector {locator} failed: {e}")

# ---------- Fallback: click overlay filter if click intercepted ----------
if not clicked:
    try:
        overlay = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", overlay)
        print("✓ Clicked through click_filter overlay")
        clicked = True
    except Exception as e:
        print(f"Overlay click failed: {e}")

# ---------- Fallback: submit form directly ----------
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[contains(@data-automation-id,'signIn') or .//input[@id='input-11']]")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Submitted form directly")
        clicked = True
    except Exception as e:
        print(f"Form submit failed: {e}")

# ---------- Fallback: press Enter in password field ----------
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        print("✓ Pressed Enter in password field")
        clicked = True
    except Exception as e:
        print(f"Enter key press failed: {e}")

# ---------- Verify sign‑in outcome (optional) ----------
time.sleep(5)  # wait for navigation after sign‑in
if "login" in driver.current_url.lower() or "signin" in driver.current_url.lower():
    print("⚠️ Still on sign‑in page, login may have failed.")
else:
    print("✅ Sign‑in likely successful.")