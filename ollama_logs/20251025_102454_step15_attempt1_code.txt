wait = WebDriverWait(driver, 15)

def click_sign_in():
    try:
        # Locate the button using the known data-automation-id
        sign_in_btn = wait.until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "button[data-automation-id='utilityButtonSignIn']"))
        )
        # Scroll into view and click via JavaScript for reliability
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", sign_in_btn)
        time.sleep(0.3)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked 'Sign In' button via JS")
        return True
    except Exception as e:
        print(f"⚠️ Initial click failed: {e}")

    # Fallback: try clicking the element directly (may succeed after overlay removed)
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='utilityButtonSignIn']")
        sign_in_btn.click()
        print("✓ Clicked 'Sign In' button directly")
        return True
    except Exception as e:
        print(f"⚠️ Direct click failed: {e}")

    # Fallback: remove possible intercepting attributes then click via JS
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='utilityButtonSignIn']")
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked 'Sign In' button after attribute cleanup")
        return True
    except Exception as e:
        print(f"⚠️ Cleanup click failed: {e}")

    # Final attempt: submit enclosing form if present
    try:
        form = sign_in_btn.find_element(By.XPATH, "./ancestor::form")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Submitted sign‑in form directly")
        return True
    except Exception as e:
        print(f"⚠️ Form submit failed: {e}")

    print("❌ Unable to click the 'Sign In' button.")
    return False

click_sign_in()