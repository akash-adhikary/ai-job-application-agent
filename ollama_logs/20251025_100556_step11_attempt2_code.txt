# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# ---------- Fill Email ----------
try:
    email_field = wait.until(
        EC.presence_of_element_located(
            (By.CSS_SELECTOR, "input#input-22, input[data-automation-id='email'], input[type='email']")
        )
    )
    email_field.clear()
    email = resume_data.get("email", "")
    email_field.send_keys(email)
    print("✓ Email filled")
except Exception as e:
    print(f"⚠️ Email field not found: {e}")

# ---------- Fill Password ----------
try:
    password_field = wait.until(
        EC.presence_of_element_located(
            (By.CSS_SELECTOR, "input#input-23, input[data-automation-id='password'], input[type='password']")
        )
    )
    password_field.clear()
    pwd = resume_data.get("password", "")
    password_field.send_keys(pwd)
    print("✓ Password filled")
except Exception as e:
    print(f"⚠️ Password field not found: {e}")

# ---------- Attempt to click Sign In ----------
clicked = False

# Strategy 1: Direct button by data-automation-id
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton'], button.css-1ru62dj")
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
        driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_in_btn)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In button (direct)")
        clicked = True
    except Exception as e:
        print(f"⚠️ Direct sign‑in click failed: {e}")

# Strategy 2: Click overlay/filter that may block the button
if not clicked:
    try:
        click_filter = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", click_filter)
        print("✓ Clicked click_filter overlay")
        clicked = True
    except Exception as e:
        print(f"⚠️ click_filter not found or click failed: {e}")

# Strategy 3: Submit the form via JavaScript
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[contains(@data-automation-id, 'signIn') or @role='form']")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Form submitted via JavaScript")
        clicked = True
    except Exception as e:
        print(f"⚠️ Form submit failed: {e}")

# Strategy 4: Press ENTER in password field
if not clicked:
    try:
        password_field.send_keys(Keys.RETURN)
        print("✓ Pressed ENTER in password field")
        clicked = True
    except Exception as e:
        print(f"⚠️ ENTER key press failed: {e}")

# Optional pause to allow post‑login navigation
time.sleep(5)