wait = WebDriverWait(driver, 15)

clicked = False

# Primary strategy: locate by data-automation-id and click via JavaScript
try:
    sign_in_btn = wait.until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, "button[data-automation-id='utilityButtonSignIn']"))
    )
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", sign_in_btn)
    time.sleep(0.5)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    print("✓ Clicked 'Sign In' button (JS click)")
    clicked = True
except Exception as e:
    print(f"⚠️ Primary click failed: {e}")

# Fallback 1: regular Selenium click (in case JS click not needed)
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='utilityButtonSignIn']")
        sign_in_btn.click()
        print("✓ Clicked 'Sign In' button (standard click)")
        clicked = True
    except Exception as e:
        print(f"⚠️ Standard click failed: {e}")

# Fallback 2: remove potential overlay attributes and retry JS click
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='utilityButtonSignIn']")
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked 'Sign In' button after removing overlay attributes")
        clicked = True
    except Exception as e:
        print(f"⚠️ Overlay attribute removal click failed: {e}")

# Final check
if not clicked:
    raise RuntimeError("❌ Unable to click the 'Sign In' button after all attempts.")