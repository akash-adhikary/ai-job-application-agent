from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 15)

# Helper to fill a text input
def fill_input(field_id, value):
    try:
        elem = wait.until(EC.element_to_be_clickable((By.ID, field_id)))
        driver.execute_script("arguments[0].scrollIntoView(true);", elem)
        elem.clear()
        elem.send_keys(value)
        print(f"✓ Filled '{field_id}' with '{value}'")
    except Exception as e:
        print(f"✗ Failed to fill '{field_id}': {e}")

# 1. Fill "How Did You Hear About Us?" (source--source)
fill_input("source--source", "LinkedIn")

# 2. Parse phone number from resume data
phone_full = resume_data.get("personal_info", {}).get("phone", "")
country_code = ""
phone_number = ""
if phone_full:
    parts = phone_full.split("-", 1)
    if len(parts) == 2:
        country_code = parts[0].replace("+", "")
        phone_number = parts[1]
    else:
        # fallback if format differs
        country_code = phone_full[:phone_full.find("-")].replace("+", "")
        phone_number = phone_full[phone_full.find("-")+1:]

# 3. Fill Country Phone Code (phoneNumber--countryPhoneCode)
if country_code:
    fill_input("phoneNumber--countryPhoneCode", f"+{country_code}")
else:
    print("⚠️ Country code not found in resume data; using default '+91'")
    fill_input("phoneNumber--countryPhoneCode", "+91")

# 4. Fill Phone Number (phoneNumber--phoneNumber)
if phone_number:
    fill_input("phoneNumber--phoneNumber", phone_number)
else:
    # fallback to hardcoded value if parsing failed
    print("⚠️ Phone number not parsed; using default '8420433877'")
    fill_input("phoneNumber--phoneNumber", "8420433877")

# Small pause after filling
time.sleep(1)