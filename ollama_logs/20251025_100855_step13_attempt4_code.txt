# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# -------- Fill Email ----------
try:
    email_input = wait.until(
        EC.presence_of_element_located((By.ID, "input-260"))
    )
    email_input.clear()
    email = resume_data.get("email", "")
    email_input.send_keys(email)
    print("✓ Email filled")
except Exception as e:
    print(f"⚠️ Email input not found: {e}")

# -------- Fill Password ----------
try:
    password_input = wait.until(
        EC.presence_of_element_located((By.ID, "input-261"))
    )
    password_input.clear()
    password = resume_data.get("password", "")
    password_input.send_keys(password)
    print("✓ Password filled")
except Exception as e:
    print(f"⚠️ Password input not found: {e}")

# -------- Click Sign‑In ----------
clicked = False
sign_in_selector = "button[data-automation-id='signInSubmitButton']"

# Strategy 1: Direct JS click after removing possible intercept attributes
if not clicked:
    try:
        sign_in_btn = wait.until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, sign_in_selector))
        )
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
        driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_in_btn)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In button via JS")
        clicked = True
    except Exception as e:
        print(f"⚠️ Direct JS click failed: {e}")

# Strategy 2: Click possible overlay filter
if not clicked:
    try:
        click_filter = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", click_filter)
        print("✓ Clicked click_filter overlay")
        clicked = True
    except Exception as e:
        print(f"⚠️ click_filter not usable: {e}")

# Strategy 3: Submit the form directly
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[contains(@data-automation-id,'signIn') or .//input[@id='input-260']]")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Submitted sign‑in form via JS")
        clicked = True
    except Exception as e:
        print(f"⚠️ Form submit failed: {e}")

# Strategy 4: Press Enter in password field
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        print("✓ Pressed Enter in password field")
        clicked = True
    except Exception as e:
        print(f"⚠️ Pressing Enter failed: {e}")

# Optional: wait for post‑login navigation
if clicked:
    try:
        wait.until(EC.invisibility_of_element_located((By.ID, "input-260")))
        print("✓ Sign‑in modal disappeared, login likely successful")
    except Exception:
        pass