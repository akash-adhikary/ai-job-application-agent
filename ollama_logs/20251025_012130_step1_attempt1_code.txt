import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: direct link with data-automation-id
try:
    apply_link = wait.until(
        EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "a[data-automation-id*='Apply'], a[data-automation-id*='apply'], a[data-automation-id='adventureButton']")
        )
    )
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", apply_link)
    time.sleep(1)
    driver.execute_script("arguments[0].click();", apply_link)
    print("✓ Clicked Apply link (JavaScript strategy 1)")
    clicked = True
except (TimeoutException, NoSuchElementException):
    pass

# Strategy 2: visible button or link with text 'Apply'
if not clicked:
    try:
        apply_btn = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//a[contains(text(),'Apply')] | //button[contains(text(),'Apply')]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", apply_btn)
        time.sleep(0.5)
        try:
            apply_btn.click()
            print("✓ Clicked Apply button (normal click strategy 2)")
        except ElementClickInterceptedException:
            driver.execute_script("arguments[0].click();", apply_btn)
            print("✓ Clicked Apply button (JavaScript fallback strategy 2)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass

# Strategy 3: any element with role='button' containing 'Apply'
if not clicked:
    try:
        role_btn = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//div[@role='button' and (contains(.,'Apply') or contains(.,'apply'))]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", role_btn)
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", role_btn)
        print("✓ Clicked role=button element (JavaScript strategy 3)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass

# Strategy 4: generic fallback by visible text
if not clicked:
    try:
        generic = driver.find_element(By.XPATH, "//*[contains(text(),'Apply')][1]")
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", generic)
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", generic)
        print("✓ Clicked generic element with text 'Apply' (JavaScript strategy 4)")
        clicked = True
    except NoSuchElementException:
        pass

if not clicked:
    print("✗ Failed to locate and click the Apply button.")