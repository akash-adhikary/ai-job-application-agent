import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import ElementClickInterceptedException, NoSuchElementException

wait = WebDriverWait(driver, 15)

try:
    # Attempt 1: locate the Sign In button by its text
    sign_in_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//button[normalize-space()='Sign In']"))
    )
    driver.execute_script("arguments[0].scrollIntoView(true);", sign_in_button)
    time.sleep(0.5)
    sign_in_button.click()
    print("✓ Clicked button (normal click)")
except ElementClickInterceptedException:
    print("⚠️ Click intercepted, trying JavaScript click...")
    driver.execute_script("arguments[0].click();", sign_in_button)
    print("✓ Clicked button (JavaScript click)")
except Exception as e:
    print(f"Primary click method failed: {e}")
    # Attempt 2: alternative selector using possible data-automation-id (if present)
    try:
        alt_button = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
        driver.execute_script("arguments[0].scrollIntoView(true);", alt_button)
        time.sleep(0.5)
        alt_button.click()
        print("✓ Clicked button via alternative selector")
    except (NoSuchElementException, ElementClickInterceptedException):
        # Attempt 3: fallback to any div acting as button with aria-label containing 'Sign In'
        try:
            fallback_button = driver.find_element(By.CSS_SELECTOR, "div[role='button'][aria-label*='Sign In']")
            driver.execute_script("arguments[0].scrollIntoView(true);", fallback_button)
            time.sleep(0.5)
            driver.execute_script("arguments[0].click();", fallback_button)
            print("✓ Clicked alternative button element")
        except Exception as ex:
            print(f"✗ Could not click Sign In button: {ex}")