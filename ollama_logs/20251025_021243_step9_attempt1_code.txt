from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)
import time

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: button with the exact class
try:
    btn = wait.until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, "button.css-1ru62dj"))
    )
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", btn)
    time.sleep(1)
    try:
        btn.click()
        print("✓ Clicked Create Account button (normal click)")
    except ElementClickInterceptedException:
        driver.execute_script("arguments[0].click();", btn)
        print("✓ Clicked Create Account button (JS click)")
    clicked = True
except (TimeoutException, NoSuchElementException):
    pass

# Strategy 2: button identified by its visible text
if not clicked:
    try:
        btn = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//button[normalize-space()='Create Account']")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", btn)
        time.sleep(1)
        try:
            btn.click()
            print("✓ Clicked Create Account button by text (normal click)")
        except ElementClickInterceptedException:
            driver.execute_script("arguments[0].click();", btn)
            print("✓ Clicked Create Account button by text (JS click)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass

# Strategy 3: any clickable element containing the text
if not clicked:
    try:
        el = wait.until(
            EC.element_to_be_clickable(
                (
                    By.XPATH,
                    "//*[contains(text(),'Create Account') and (self::button or self::a)]",
                )
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", el)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", el)
        print("✓ Clicked Create Account element (fallback JS click)")
        clicked = True
    except Exception as e:
        print(f"✗ Could not click Create Account button: {e}")

if not clicked:
    raise Exception("Failed to click the Create Account button.")