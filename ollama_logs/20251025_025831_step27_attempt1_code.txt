from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# Wait for the sign‑in modal to be visible
try:
    wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, "[aria-modal='true']")))
except Exception:
    pass

# Fill email
email_input = wait.until(EC.presence_of_element_located((By.ID, "input-11")))
email_input.clear()
email_input.send_keys(resume_data["email"])

# Fill password
password_input = wait.until(EC.presence_of_element_located((By.ID, "input-12")))
password_input.clear()
password_input.send_keys(resume_data["password"])

time.sleep(0.5)

clicked = False

# Primary: click the official sign‑in button
try:
    sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button[data-automation-id='signInSubmitButton']")
    driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
    driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    clicked = True
except Exception:
    pass

# Fallback: click by known Workday class
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, "button.css-1ru62dj")
        driver.execute_script("arguments[0].click();", sign_in_btn)
        clicked = True
    except Exception:
        pass

# Fallback: press Enter in the password field
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        clicked = True
    except Exception:
        pass

# Optional: wait for the modal to disappear indicating successful login
if clicked:
    try:
        wait.until(EC.invisibility_of_element_located((By.CSS_SELECTOR, "[aria-modal='true']")))
    except Exception:
        pass