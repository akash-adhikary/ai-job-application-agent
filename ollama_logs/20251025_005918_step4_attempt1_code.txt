from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: Direct button with specific class inside modal
try:
    sign_in_btn = wait.until(
        EC.element_to_be_clickable(
            (By.XPATH, "//div[contains(@class, 'modal')]//button[contains(@class, 'css-1ru62dj') and normalize-space(text())='Sign In']")
        )
    )
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", sign_in_btn)
    time.sleep(1)
    driver.execute_script("arguments[0].click();", sign_in_btn)
    print("✓ Clicked Sign In button (modal, class css-1ru62dj) via JavaScript")
    clicked = True
except Exception as e:
    print(f"✗ Strategy 1 failed: {e}")

# Strategy 2: Button with exact text inside modal
if not clicked:
    try:
        sign_in_btn = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//div[contains(@class, 'modal')]//button[normalize-space(text())='Sign In']")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", sign_in_btn)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In button (modal, text match) via JavaScript")
        clicked = True
    except Exception as e:
        print(f"✗ Strategy 2 failed: {e}")

# Strategy 3: Generic fallback – any clickable element containing 'Sign In'
if not clicked:
    try:
        sign_in_btn = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//*[contains(text(), 'Sign In') and (self::button or self::a or self::div)]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", sign_in_btn)
        time.sleep(1)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign In button (fallback) via JavaScript")
        clicked = True
    except Exception as e:
        print(f"✗ Strategy 3 failed: {e}")

if not clicked:
    print("✗ Unable to locate and click the Sign In button.")