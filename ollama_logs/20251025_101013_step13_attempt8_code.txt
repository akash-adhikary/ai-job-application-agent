# Previous error: Validation failed: No meaningful change detected - action likely failed
# Adjusting approach...

from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

wait = WebDriverWait(driver, 20)

# Wait for the sign‑in modal to be visible
try:
    modal = wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, "[aria-modal='true']")))
except Exception as e:
    print("⚠️ Sign‑in modal not found:", e)
    raise

# Fill Email
try:
    email_input = wait.until(EC.element_to_be_clickable((By.ID, "input-260")))
    email_input.clear()
    email = resume_data.get("email", "")
    email_input.send_keys(email)
    print("✓ Email entered")
except Exception as e:
    print("⚠️ Failed to locate/fill email input:", e)
    raise

# Fill Password
try:
    password_input = wait.until(EC.element_to_be_clickable((By.ID, "input-261")))
    password_input.clear()
    password = resume_data.get("password", "")
    password_input.send_keys(password)
    print("✓ Password entered")
except Exception as e:
    print("⚠️ Failed to locate/fill password input:", e)
    raise

# Click Sign‑In button using multiple strategies
clicked = False
sign_in_selector = "button[data-automation-id='signInSubmitButton']"

# Strategy 1: Direct JS click after removing possible intercept attributes
if not clicked:
    try:
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, sign_in_selector)
        driver.execute_script("arguments[0].removeAttribute('tabindex');", sign_in_btn)
        driver.execute_script("arguments[0].removeAttribute('aria-hidden');", sign_in_btn)
        driver.execute_script("arguments[0].scrollIntoView({block:'center'});", sign_in_btn)
        time.sleep(0.3)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign‑In button via JS")
        clicked = True
    except Exception as e:
        print("⚠️ Strategy 1 failed:", e)

# Strategy 2: Click through overlay/filter that may intercept clicks
if not clicked:
    try:
        overlay = driver.find_element(By.CSS_SELECTOR, "[data-automation-id='click_filter']")
        driver.execute_script("arguments[0].click();", overlay)
        print("✓ Clicked overlay filter")
        # Try clicking the button again after removing overlay
        sign_in_btn = driver.find_element(By.CSS_SELECTOR, sign_in_selector)
        driver.execute_script("arguments[0].click();", sign_in_btn)
        print("✓ Clicked Sign‑In after overlay removal")
        clicked = True
    except Exception as e:
        print("⚠️ Strategy 2 failed:", e)

# Strategy 3: Submit the form directly
if not clicked:
    try:
        form = driver.find_element(By.XPATH, "//form[contains(@data-automation-id,'signIn') or .//input[@id='input-260']]")
        driver.execute_script("arguments[0].submit();", form)
        print("✓ Submitted sign‑in form directly")
        clicked = True
    except Exception as e:
        print("⚠️ Strategy 3 failed:", e)

# Strategy 4: Press ENTER in the password field
if not clicked:
    try:
        password_input.send_keys(Keys.RETURN)
        print("✓ Pressed Enter in password field")
        clicked = True
    except Exception as e:
        print("⚠️ Strategy 4 failed:", e)

if not clicked:
    print("❌ Unable to trigger sign‑in action; manual intervention may be required")