from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import ElementClickInterceptedException, NoSuchElementException, TimeoutException
import time

wait = WebDriverWait(driver, 15)

def click_apply_manually():
    try:
        # Try locating a button element with visible text "Apply Manually"
        button = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//button[normalize-space()='Apply Manually' or contains(.,'Apply Manually')]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView(true);", button)
        time.sleep(0.5)
        button.click()
        print("✓ Clicked 'Apply Manually' button (normal click)")
        return
    except (ElementClickInterceptedException, TimeoutException, NoSuchElementException) as e:
        print(f"⚠️ Normal click failed: {e}")

    try:
        # Fallback: try clicking via JavaScript on the same element
        driver.execute_script("arguments[0].click();", button)
        print("✓ Clicked 'Apply Manually' button (JavaScript click)")
        return
    except Exception as e:
        print(f"⚠️ JavaScript click failed: {e}")

    try:
        # Alternative locator: any element with role='button' containing the text
        alt_button = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//*[@role='button' and (contains(translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'apply manually'))]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView(true);", alt_button)
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", alt_button)
        print("✓ Clicked alternative 'Apply Manually' element (JavaScript click)")
        return
    except Exception as e:
        print(f"✗ Could not click 'Apply Manually' button: {e}")

# Execute the click action
click_apply_manually()
time.sleep(1)  # brief pause after clicking