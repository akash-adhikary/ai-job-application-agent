import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import ElementClickInterceptedException, NoSuchElementException

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: link with data-automation-id containing 'Apply' or role='button'
try:
    apply_link = wait.until(
        EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "a[data-automation-id*='Apply'], a[data-automation-id*='apply'], a[role='button']")
        )
    )
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", apply_link)
    time.sleep(1)
    driver.execute_script("arguments[0].click();", apply_link)
    print("✓ Clicked Apply link (JavaScript)")
    clicked = True
except Exception as e:
    print(f"Strategy 1 failed: {e}")

# Strategy 2: button with visible text 'Apply'
if not clicked:
    try:
        apply_button = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//button[contains(normalize-space(), 'Apply')]")
            )
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", apply_button)
        time.sleep(0.5)
        try:
            apply_button.click()
            print("✓ Clicked Apply button (normal click)")
        except ElementClickInterceptedException:
            driver.execute_script("arguments[0].click();", apply_button)
            print("✓ Clicked Apply button (JavaScript click)")
        clicked = True
    except Exception as e:
        print(f"Strategy 2 failed: {e}")

# Strategy 3: div or span with role=button and data-automation-id containing 'button'
if not clicked:
    try:
        div_btn = driver.find_element(
            By.CSS_SELECTOR,
            "div[role='button'][data-automation-id*='button'], span[role='button'][data-automation-id*='button']"
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", div_btn)
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", div_btn)
        print("✓ Clicked div/span button (JavaScript)")
        clicked = True
    except NoSuchElementException:
        print("Strategy 3: element not found")
    except Exception as e:
        print(f"Strategy 3 failed: {e}")

# Strategy 4: fallback – any element containing the text 'Apply'
if not clicked:
    try:
        fallback_elem = driver.find_element(
            By.XPATH,
            "//*[contains(text(), 'Apply')][1]"
        )
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", fallback_elem)
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", fallback_elem)
        print("✓ Clicked fallback element with text 'Apply' (JavaScript)")
        clicked = True
    except Exception as e:
        print(f"Strategy 4 failed: {e}")

if not clicked:
    print("✗ Could not click the Apply button using any strategy.")