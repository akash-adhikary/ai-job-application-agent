from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)
import time

wait = WebDriverWait(driver, 15)
clicked = False

# Strategy 1: direct selector using data-automation-id or known class
try:
    apply_elem = wait.until(
        EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "a[data-automation-id='adventureButton'], a.css-1l7roxh")
        )
    )
    driver.execute_script(
        "arguments[0].scrollIntoView({block: 'center'});", apply_elem
    )
    time.sleep(1)
    driver.execute_script("arguments[0].click();", apply_elem)
    print("✓ Clicked Apply (Strategy 1)")
    clicked = True
except (TimeoutException, NoSuchElementException):
    pass

# Strategy 2: button or link containing text 'Apply'
if not clicked:
    try:
        apply_elem = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//button[contains(., 'Apply')] | //a[contains(., 'Apply')]")
            )
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", apply_elem
        )
        time.sleep(0.5)
        try:
            apply_elem.click()
            print("✓ Clicked Apply (Strategy 2 - normal click)")
        except ElementClickInterceptedException:
            driver.execute_script("arguments[0].click();", apply_elem)
            print("✓ Clicked Apply (Strategy 2 - JS click)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass

# Strategy 3: any element with role='button' and text 'Apply'
if not clicked:
    try:
        apply_elem = wait.until(
            EC.element_to_be_clickable(
                (By.XPATH, "//*[@role='button' and (contains(text(),'Apply') or .='Apply')]")
            )
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", apply_elem
        )
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", apply_elem)
        print("✓ Clicked Apply (Strategy 3)")
        clicked = True
    except (TimeoutException, NoSuchElementException):
        pass

# Strategy 4: fallback – first element containing the word Apply
if not clicked:
    try:
        apply_elem = driver.find_element(
            By.XPATH, "//*[contains(text(),'Apply')][1]"
        )
        driver.execute_script(
            "arguments[0].scrollIntoView({block: 'center'});", apply_elem
        )
        time.sleep(0.5)
        driver.execute_script("arguments[0].click();", apply_elem)
        print("✓ Clicked Apply (Strategy 4)")
        clicked = True
    except NoSuchElementException:
        pass

if not clicked:
    print("✗ Could not locate/click the Apply button.")